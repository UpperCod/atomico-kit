{"version":3,"file":"use-media-resize.showcase.js","sources":["../src/hooks/use-media-resize/use-media-resize.js","../src/hooks/use-media-resize/use-media-resize.showcase.js"],"sourcesContent":["import { useEffect, useState } from \"atomico\";\r\n\r\nexport function useMediaResize(value, ref = {}) {\r\n  let sizes = getSizes(value); // The computation process is light in cost vs useMemo\r\n\r\n  let [state, setState] = useState(() => [null, ref]);\r\n\r\n  state[2] = sizes;\r\n\r\n  useEffect(() => {\r\n    let [, ref] = state;\r\n\r\n    if (!ref.listeners) {\r\n      let listeners = [];\r\n      let observer = new ResizeObserver(\r\n        ([\r\n          {\r\n            contentRect: { width },\r\n          },\r\n        ]) => {\r\n          listeners.forEach((fn) => fn(width));\r\n        }\r\n      );\r\n      ref.listeners = listeners;\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    let listener = (width) => {\r\n      let sizes = state[2];\r\n      if (\r\n        !sizes.cases.some(([value, px]) => {\r\n          if (px >= width) {\r\n            setState(updateState(value));\r\n            return true;\r\n          }\r\n        })\r\n      ) {\r\n        setState(updateState(sizes.default || value));\r\n      }\r\n    };\r\n\r\n    ref.listeners.push(listener);\r\n\r\n    return () => ref.listeners.splice(ref.listeners.indexOf(listener) >>> 0, 1);\r\n  }, []);\r\n  return state;\r\n}\r\n\r\nlet updateState = (nextValue) => (currentState) => {\r\n  let [value, ...state] = currentState;\r\n  return nextValue == value ? currentState : [nextValue, ...state];\r\n};\r\n\r\nfunction getSizes(value) {\r\n  let sizes = { cases: [] };\r\n\r\n  value.split(/ *, */).forEach((value) => {\r\n    let size = value.match(/([^\\s]+) +(\\d+)px/);\r\n    if (size) {\r\n      let [, value, number] = size;\r\n      sizes.cases.push([value, Number(number)]);\r\n    } else {\r\n      sizes.default = value;\r\n    }\r\n  });\r\n\r\n  sizes.cases.sort(([, a], [, b]) => (a > b ? 1 : -1));\r\n\r\n  return sizes;\r\n}\r\n","import { h, customElement } from \"atomico\";\r\nimport { useMediaResize } from \"./use-media-resize\";\r\nexport { render } from \"atomico\";\r\n\r\nconst Example1 = ({ src }) => {\r\n  const [state, ref] = useMediaResize(src);\r\n  return (\r\n    <host ref={ref} shadowDom>\r\n      <style>{`:host{display:block;width:100%}img{width:100%}`}</style>\r\n      <img src={state} />\r\n    </host>\r\n  );\r\n};\r\n\r\nExample1.props = {\r\n  src: String\r\n};\r\n\r\ncustomElement(\"use-media-resize-example-1\", Example1);\r\n\r\nexport default [\r\n  {\r\n    label: \"Example useMediaResize\",\r\n    render() {\r\n      const url = \"https://via.placeholder.com/\";\r\n      return (\r\n        <use-media-resize-example-1\r\n          src={`${url}1080x150, ${url}720x200 720px, ${url}520x300 520px, ${url}320x500 240px`}\r\n        ></use-media-resize-example-1>\r\n      );\r\n    }\r\n  }\r\n];\r\n"],"names":["useMediaResize","value","ref","sizes","getSizes","state","setState","useState","useEffect","listeners","observer","ResizeObserver","contentRect","width","forEach","fn","observe","current","listener","cases","some","px","updateState","default","push","splice","indexOf","nextValue","currentState","split","size","match","number","Number","sort","a","b","Example1","src","h","props","String","customElement","label","render","url"],"mappings":"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"}