{"version":3,"file":"a-router.showcase.js","sources":["../src/hooks/use-router/src/location.js","../src/hooks/use-router/src/parse.js","../src/hooks/use-router/use-router.js","../src/components/a-router/a-router.js","../src/components/a-router/a-router.showcase.js"],"sourcesContent":["/**\r\n * @return {string} pathname\r\n */\r\nexport function getPathname() {\r\n  return location.pathname;\r\n}\r\n/**\r\n * Dispatch history a new pathname\r\n * @type {Redirect}\r\n */\r\nexport function redirect(pathname) {\r\n  if (pathname == getPathname()) return;\r\n  history.pushState({}, \"history\", pathname);\r\n  window.dispatchEvent(new PopStateEvent(\"popstate\"));\r\n}\r\n\r\nexport function subscribe(handler) {\r\n  window.addEventListener(\"popstate\", handler);\r\n  return () => window.removeEventListener(\"popstate\", handler);\r\n}\r\n","const FOLDERS = /([^\\/]+)/g;\r\nconst FOLDER = \"[^\\\\/]\";\r\nconst SPLIT = \"(?:\\\\/){0,1}\";\r\nconst PARAM = /^(:)(\\w+)(\\?|(\\.){3}){0,1}/;\r\nconst PARAMS_EMPTY = {};\r\nconst MEMO = {};\r\n\r\nexport function format(path) {\r\n  return path.replace(/(\\/){2,}/g, \"/\").replace(/([^\\/]+)\\/$/, \"$1\");\r\n}\r\n\r\nexport function join(a, b) {\r\n  let split = \"/\";\r\n  return format((a || split) + split + (b || split));\r\n}\r\n\r\nexport function parse(string) {\r\n  let folders = string.match(FOLDERS) || [\"\"];\r\n  let params = [];\r\n  let regexp = new RegExp(\r\n    \"^\" +\r\n      folders\r\n        .map(folder => {\r\n          let [string, param, field, type] = folder.match(PARAM) || [];\r\n          if (param) {\r\n            params.push(field);\r\n            if (type === \"...\") {\r\n              return `(.*)`;\r\n            } else if (type === \"?\") {\r\n              return `${SPLIT}(${FOLDER}*)`;\r\n            } else {\r\n              return `\\\\/(${FOLDER}+)`;\r\n            }\r\n          } else {\r\n            return `\\\\/(?:${folder\r\n              .replace(/(\\.|\\-)/g, \"\\\\$1\")\r\n              .replace(/\\*/g, FOLDER + \"+\")\r\n              .replace(/\\((?!\\?\\:)/g, \"(?:\")})`;\r\n          }\r\n        })\r\n        .join(\"\") +\r\n      \"$\",\r\n    \"i\"\r\n  );\r\n\r\n  return { regexp, params, logs: {} };\r\n}\r\n/**\r\n * permite comparar un patron de captura vs un ruta de entrada\r\n * @param {string} path - ruta de patron de captura\r\n * @param {string} value  - ruta de comparacion a patron\r\n * @return {array} - [ inRoute:boolean, params:object ];\r\n */\r\nexport function match(path, value) {\r\n  path = format(path);\r\n  value = format(value);\r\n  if (!MEMO[path]) {\r\n    MEMO[path] = parse(path);\r\n  }\r\n  let { regexp, params, logs } = MEMO[path];\r\n  if (logs[value]) {\r\n    return logs[value];\r\n  }\r\n  let vs = value.match(regexp);\r\n  return (logs[value] = [\r\n    vs ? true : false,\r\n    vs\r\n      ? vs.slice(1).reduce((next, value, index) => {\r\n          next[params[index] || index] = value;\r\n          return next;\r\n        }, {})\r\n      : PARAMS_EMPTY\r\n  ]);\r\n}\r\n","import { useState, useEffect, useCallback } from \"atomico\";\r\nimport { redirect, getPathname, subscribe } from \"./src/location\";\r\nimport { match, join } from \"./src/parse\";\r\n\r\nexport function useHistory() {\r\n  let pathname = getPathname();\r\n  let [, setState] = useState({ pathname });\r\n\r\n  useEffect(() => {\r\n    function handler() {\r\n      let pathname = getPathname();\r\n      setState(state => (state.pathname != pathname ? { pathname } : state));\r\n    }\r\n    return subscribe(handler);\r\n  }, []);\r\n  return [pathname, redirect];\r\n}\r\n\r\nexport function useMatchRoute(path) {\r\n  return match(path, getPathname());\r\n}\r\n\r\nexport function useRoute(path, parentPath) {\r\n  useHistory();\r\n  return useMatchRoute(join(parentPath, path));\r\n}\r\n\r\nexport function useRedirect(parentPath) {\r\n  return useCallback(\r\n    subPath =>\r\n      redirect(join(parentPath, typeof subPath == \"string\" ? subPath : \"\")),\r\n    [parentPath]\r\n  );\r\n}\r\n\r\nexport function useRouter(cases, parentPath) {\r\n  let def = \"default\";\r\n  let [pathname] = useHistory();\r\n  for (let key in cases) {\r\n    if (key != def) {\r\n      let [status, params] = match(join(parentPath, key), pathname);\r\n      if (status) return cases[key](params);\r\n    }\r\n  }\r\n  return cases[def]();\r\n}\r\n","import {\n  h,\n  customElement,\n  Any,\n  useRef,\n  useHost,\n  useEvent,\n  useEffect,\n  useState,\n} from \"atomico\";\n\nimport { useHistory } from \"../../hooks/use-router/use-router\";\nimport { match, join } from \"../../hooks/use-router/src/parse\";\nimport { redirect } from \"../../hooks/use-router/src/location\";\nimport { useLazy } from \"../../hooks/use-lazy/use-lazy\";\n\nconst ARouterProxy = ({ path }) => {\n  return (\n    <host\n      onclick={(event) => {\n        let { target } = event;\n        let href;\n        while (target) {\n          href = target.getAttribute(\"href\");\n          if (target.hasAttribute(\"ignore\")) return;\n          target = href ? 0 : target.parentElement;\n        }\n        if (href) {\n          event.preventDefault();\n          redirect(join(path, href));\n        }\n      }}\n    ></host>\n  );\n};\n\nconst ARouterCase = ({ src, path }) => {\n  let refHost = useHost();\n\n  let dispatchUpdatedARouterCase = useEvent(\"UpdatedARouterCase\", {\n    bubbles: true,\n    composed: true,\n  });\n\n  useEffect(() => {\n    let { current } = refHost;\n    let disconect;\n    dispatchUpdatedARouterCase((callback) => (disconect = callback));\n    return () => {\n      !current.isConnected && disconect();\n    };\n  }, [src, path]);\n\n  return <host></host>;\n};\n\nconst notFound = { src: () => Promise.resolve(() => <slot name=\"404\"></slot>) };\n\nconst ARouterSwitch = () => {\n  let [pathname] = useHistory();\n  let ref = useRef({});\n  let [routeState, setRouteState] = useState(notFound);\n\n  let [lazyState, LazyResult] = useLazy(\n    () =>\n      typeof routeState.src == \"string\"\n        ? import(routeState.src)\n        : routeState.src(),\n    routeState.src,\n    [routeState.src]\n  );\n\n  let chunkUpdate;\n  let chunkRemove;\n\n  let define = () => {\n    let select = notFound;\n    for (let path in ref.current) {\n      let { src, default: isDefault } = ref.current[path];\n      let [state, params] = match(path, pathname);\n      if (state || isDefault) {\n        select = { state, params, path, src, pathname };\n        if (!isDefault) break;\n      }\n    }\n    setRouteState((state) =>\n      state.pathname == select.pathname ? state : select\n    );\n  };\n  useEffect(define, [pathname]);\n  return (\n    <host\n      shadowDom\n      onUpdatedARouterCase={({ target, detail }) => {\n        let { path } = target;\n        ref.current[path] = target;\n        detail(() => {\n          delete ref.current[path];\n          if (!chunkRemove) {\n            chunkRemove = true;\n            queueMicrotask(define);\n          }\n        });\n        if (!chunkUpdate) {\n          chunkUpdate = true;\n          queueMicrotask(define);\n        }\n      }}\n    >\n      {lazyState == \"loading\" ? (\n        <slot name=\"loading\">{lazyState}</slot>\n      ) : lazyState == \"error\" ? (\n        <slot name=\"error\">{lazyState}</slot>\n      ) : lazyState == \"done\" ? (\n        LazyResult(routeState.params)\n      ) : (\n        \"\"\n      )}\n    </host>\n  );\n};\n\nARouterCase.props = {\n  path: {\n    type: String,\n    reflect: true,\n  },\n  src: {\n    type: Any,\n  },\n  default: {\n    type: Boolean,\n  },\n};\n\nARouterProxy.props = {\n  path: {\n    type: String,\n    value: \"\",\n  },\n};\n\ncustomElement(\"a-router-switch\", ARouterSwitch);\ncustomElement(\"a-router-case\", ARouterCase);\ncustomElement(\"a-router-proxy\", ARouterProxy);\n","import { h } from \"atomico\";\r\nexport { render } from \"atomico\";\r\nimport \"./a-router\";\r\n\r\nconst demoResult = (result) => () =>\r\n  new Promise((resolve) => setTimeout(resolve, 1000, { default: result }));\r\n\r\nconst result1 = demoResult((props) => (\r\n  <form>\r\n    <input type=\"file\" name=\"ddd\" value=\"\" />\r\n    Home\r\n  </form>\r\n));\r\n\r\nconst result2 = demoResult((props) => <h3>Config</h3>);\r\n\r\nconst result3 = demoResult((props) => <h3>{JSON.stringify(props)}</h3>);\r\n\r\nexport default [\r\n  {\r\n    label: \"Ejemplo\",\r\n    render() {\r\n      return (\r\n        <host>\r\n          <a-router-proxy>\r\n            <p>\r\n              The import effect is emulated with a delay to show the use of the\r\n              loading slot\r\n            </p>\r\n            <nav>\r\n              <a style=\"margin:5px\" href=\"/\">\r\n                home\r\n              </a>\r\n              <a style=\"margin:5px\" href=\"/user\">\r\n                user\r\n              </a>\r\n              <a style=\"margin:5px\" href=\"/config\">\r\n                config\r\n              </a>\r\n            </nav>\r\n            <a-router-switch>\r\n              <a-router-case path=\"/\" src={result1}></a-router-case>\r\n              <a-router-case path=\"/user\" src={result2}></a-router-case>\r\n              <a-router-case path=\"/:any...\" src={result3}></a-router-case>\r\n              <h1 slot=\"loading\">loading...</h1>\r\n              <h1 slot=\"404\">404</h1>\r\n            </a-router-switch>\r\n          </a-router-proxy>\r\n        </host>\r\n      );\r\n    },\r\n  },\r\n];\r\n"],"names":["getPathname","location","pathname","redirect","history","pushState","window","dispatchEvent","PopStateEvent","subscribe","handler","addEventListener","removeEventListener","FOLDERS","FOLDER","SPLIT","PARAM","PARAMS_EMPTY","MEMO","format","path","replace","join","a","b","split","parse","string","folders","match","params","regexp","RegExp","map","folder","param","field","type","push","logs","value","vs","slice","reduce","next","index","useHistory","setState","useState","useEffect","state","ARouterProxy","event","target","href","getAttribute","hasAttribute","parentElement","preventDefault","ARouterCase","src","refHost","useHost","dispatchUpdatedARouterCase","useEvent","bubbles","composed","current","disconect","callback","isConnected","notFound","Promise","resolve","ARouterSwitch","ref","useRef","routeState","setRouteState","lazyState","LazyResult","useLazy","chunkUpdate","chunkRemove","define","select","default","isDefault","detail","queueMicrotask","props","String","reflect","Any","Boolean","customElement","demoResult","result","setTimeout","result1","result2","result3","JSON","stringify","label","render"],"mappings":"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"}