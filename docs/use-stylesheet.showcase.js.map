{"version":3,"file":"use-stylesheet.showcase.js","sources":["../src/hooks/use-stylesheet/use-stylesheet.js","../src/hooks/use-stylesheet/use-stylesheet.showcase.js"],"sourcesContent":["import { useHost, useEffect } from \"atomico\";\n\nlet cache = {};\nlet support = document.adoptedStyleSheets;\n\n/**\n * Add support to styleSheet, only in browsers that\n * implement it, it is remembered that adoptedStyleSheets\n * (05/13/2020) is not standard of the w3 is just a\n * valid implementation for google crhome\n * @param  {...(string|CSSStyleSheet)} stylesheet\n */\nexport function useStylesheet(...stylesheet) {\n  let ref = useHost();\n  let { current } = ref;\n\n  useEffect(() => {\n    if (support) {\n      ref.prev = ref.prev || [];\n      let shadowRootPrev = current.shadowRoot.adoptedStyleSheets.filter(\n        (styleSheet) => !ref.prev.includes(styleSheet)\n      );\n      ref.prev = stylesheet.map((css) => {\n        if (typeof css == \"string\" && !cache[css]) {\n          let sheet = new CSSStyleSheet();\n          sheet.replace(css);\n          cache[css] = sheet;\n        }\n        return cache[css] || css;\n      });\n\n      current.shadowRoot.adoptedStyleSheets = [...shadowRootPrev, ...ref.prev];\n    }\n  }, stylesheet);\n\n  return support ? \"\" : stylesheet.join(\"\");\n}\n","import { h, customElement, useState } from \"atomico\";\r\nimport { useStylesheet } from \"./use-stylesheet\";\r\nexport { render } from \"atomico\";\r\n\r\nconst Example1 = ({ src }) => {\r\n  let [state, setState] = useState(0);\r\n  let stylesText = useStylesheet(\r\n    `:host{color:red}`,\r\n    `:host{background:rgba(0,0,0,.${state})}`\r\n  );\r\n  return (\r\n    <host shadowDom>\r\n      <style>{stylesText}</style>\r\n      <h1>Is the text red?</h1>\r\n      <button onclick={() => setState(state + 1 > 10 ? 0 : state + 1)}>\r\n        update : {state}\r\n      </button>\r\n    </host>\r\n  );\r\n};\r\n\r\nExample1.props = {\r\n  src: String,\r\n};\r\n\r\ncustomElement(\"use-stylesheet-example-1\", Example1);\r\n\r\nexport default [\r\n  {\r\n    label: \"Example useStylesheet\",\r\n    render() {\r\n      return (\r\n        <host>\r\n          <use-stylesheet-example-1></use-stylesheet-example-1>\r\n        </host>\r\n      );\r\n    },\r\n  },\r\n];\r\n"],"names":["cache","support","document","adoptedStyleSheets","Example1","src","state","setState","useState","stylesText","stylesheet","ref","useHost","current","useEffect","prev","shadowRootPrev","shadowRoot","filter","styleSheet","includes","map","css","sheet","CSSStyleSheet","replace","join","useStylesheet","h","shadowDom","onclick","props","String","customElement","label","render"],"mappings":"mHAEA,IAAIA,EAAQ,GACRC,EAAUC,SAASC,mBCCvB,MAAMC,EAAW,EAAGC,IAAAA,UACbC,EAAOC,GAAYC,EAAS,GAC7BC,EDMC,YAA0BC,OAC3BC,EAAMC,KACNC,QAAEA,GAAYF,SAElBG,EAAU,QACJb,EAAS,CACXU,EAAII,KAAOJ,EAAII,MAAQ,OACnBC,EAAiBH,EAAQI,WAAWd,mBAAmBe,OACxDC,IAAgBR,EAAII,KAAKK,SAASD,IAErCR,EAAII,KAAOL,EAAWW,IAAKC,OACP,iBAAPA,IAAoBtB,EAAMsB,GAAM,KACrCC,EAAQ,IAAIC,cAChBD,EAAME,QAAQH,GACdtB,EAAMsB,GAAOC,SAERvB,EAAMsB,IAAQA,IAGvBT,EAAQI,WAAWd,mBAAqB,IAAIa,KAAmBL,EAAII,QAEpEL,GAEIT,EAAU,GAAKS,EAAWgB,KAAK,IC7BrBC,CACd,mBACA,gCAA+BrB,cAGhCsB,UAAMC,cACJD,eAAQnB,GACRmB,gCACAA,YAAQE,QAAS,IAAMvB,EAASD,EAAQ,EAAI,GAAK,EAAIA,EAAQ,gBACjDA,KAMlBF,EAAS2B,MAAQ,CACf1B,IAAK2B,QAGPC,EAAc,2BAA4B7B,GAE1C,MAAe,CACb,CACE8B,MAAO,wBACPC,OAAM,IAEFP,cACEA"}