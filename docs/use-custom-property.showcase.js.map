{"version":3,"file":"use-custom-property.showcase.js","sources":["../src/hooks/use-custom-property/use-custom-property.showcase.js","../src/hooks/use-custom-property/use-custom-property.js"],"sourcesContent":["import { h, customElement, useState } from \"atomico\";\r\nimport { useCustomProperty } from \"./use-custom-property\";\r\nexport { render } from \"atomico\";\r\n\r\nconst Example1 = ({ src }) => {\r\n  let [state, setState] = useState(0);\r\n  let value = state ? \"red\" : \"teal\";\r\n  useCustomProperty(\"color\", value);\r\n  return (\r\n    <host shadowDom>\r\n      <style>{`:host{color:var(--color)}`}</style>\r\n      <h1>Is the text {value}?</h1>\r\n      <button onclick={() => setState(!state)}>Toggle color</button>\r\n    </host>\r\n  );\r\n};\r\n\r\nExample1.props = {\r\n  src: String,\r\n};\r\n\r\ncustomElement(\"use-custom-property-example-1\", Example1);\r\n\r\nexport default [\r\n  {\r\n    label: \"Example useCustomProperty\",\r\n    render() {\r\n      return (\r\n        <host>\r\n          <use-custom-property-example-1></use-custom-property-example-1>\r\n        </host>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import { useHost } from \"atomico\";\n\n/**\n * Define a customProperty on the host that declares this hook\n * @param {string} name\n * @param {string} value\n */\nexport function useCustomProperty(name, value) {\n  let ref = useHost();\n  if (ref[name] != value) {\n    ref.current.style.setProperty(\"--\" + name, value);\n    ref[name] = value;\n  }\n}\n"],"names":["Example1","src","state","setState","useState","value","name","ref","useHost","current","style","setProperty","useCustomProperty","h","shadowDom","onclick","props","String","customElement","label","render"],"mappings":"4GAIA,MAAMA,EAAW,EAAGC,IAAAA,UACbC,EAAOC,GAAYC,EAAS,GAC7BC,EAAQH,EAAQ,MAAQ,cCCvB,SAA2BI,EAAMD,OAClCE,EAAMC,IACND,EAAID,IAASD,IACfE,EAAIE,QAAQC,MAAMC,YAAY,KAAOL,EAAMD,GAC3CE,EAAID,GAAQD,GDJdO,CAAkB,QAASP,GAEzBQ,UAAMC,cACJD,eAAS,6BACTA,2BAAiBR,OACjBQ,YAAQE,QAAS,IAAMZ,GAAUD,sBAKvCF,EAASgB,MAAQ,CACff,IAAKgB,QAGPC,EAAc,gCAAiClB,GAE/C,MAAe,CACb,CACEmB,MAAO,4BACPC,OAAM,IAEFP,cACEA"}