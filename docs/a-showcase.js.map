{"version":3,"file":"a-showcase.js","sources":["../src/hooks/use-event-move/use-event-move.js","../src/components/a-showcase/a-showcase.js"],"sourcesContent":["import { useState } from \"atomico\";\r\n\r\nlet globalHandlerCancel = [\r\n  \"touchend\",\r\n  \"mouseup\",\r\n  \"mouseleave\",\r\n  \"touchleave\",\r\n  \"click\"\r\n];\r\nlet globalHandlerCapture = [\"mousemove\", \"touchmove\"];\r\n\r\nfunction addEventListener(type, handler) {\r\n  window.addEventListener(type, handler);\r\n}\r\n\r\nfunction removeEventListener(type, handler) {\r\n  window.removeEventListener(type, handler);\r\n}\r\n\r\nexport function getSwipe(range, duration = 500, space = 100) {\r\n  let length = range.length;\r\n  let first = range[0];\r\n  let last = range[length - 1];\r\n  let [x, y] = range.reduce(([x, y], step) => [(x += step.x), (y += step.y)], [\r\n    0,\r\n    0\r\n  ]);\r\n  let ms = last.t - first.t;\r\n  if (ms < duration) {\r\n    let xD = first.x - last.x;\r\n\r\n    let dir = xD > 0 ? \"toRight\" : \"toLeft\";\r\n\r\n    if (Math.abs(xD) > 60) {\r\n      let yM = y / length;\r\n\r\n      let yMMax = yM + space / 2;\r\n      let yMMin = yM - space / 2;\r\n\r\n      let validZoneY = [first, last].every(({ y }) => y <= yMMax && y >= yMMin);\r\n      if (validZoneY) {\r\n        return dir;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {ObserverEventMove} callback\r\n */\r\nexport function useEventMove(callback) {\r\n  let [ref] = useState(() => {\r\n    function dispath(...args) {\r\n      return ref.callback(...args);\r\n    }\r\n    function startCapture(event) {\r\n      ref.capture = [];\r\n      globalHandlerCancel.forEach(type => addEventListener(type, endCapture));\r\n      globalHandlerCapture.forEach(type => addEventListener(type, capture));\r\n      capture(event, true);\r\n      dispath(\"start\", ref.capture);\r\n    }\r\n    function endCapture(event) {\r\n      if (!ref.capture) return;\r\n      capture(event, false);\r\n      let { capture: currentCapture } = ref;\r\n      ref.capture = false;\r\n      globalHandlerCancel.forEach(type =>\r\n        removeEventListener(type, endCapture)\r\n      );\r\n      globalHandlerCapture.forEach(type => removeEventListener(type, capture));\r\n      dispath(\"end\", currentCapture);\r\n    }\r\n    function capture(event, ignoreEmit) {\r\n      if (!ref.capture) return;\r\n      let x;\r\n      let y;\r\n\r\n      if (/touch/.test(event.type)) {\r\n        let touch = event.touches[0];\r\n        if (!touch) return;\r\n        x = touch.clientX;\r\n        y = touch.clientY;\r\n      } else {\r\n        x = event.clientX;\r\n        y = event.clientY;\r\n      }\r\n      ref.capture.push({ x, y, t: event.timeStamp });\r\n\r\n      if (!ignoreEmit) dispath(\"move\", ref.capture);\r\n    }\r\n\r\n    return {\r\n      slide: -1,\r\n      events: {\r\n        startCapture\r\n      }\r\n    };\r\n  });\r\n\r\n  ref.callback = callback;\r\n\r\n  return {\r\n    ref,\r\n    ontouchstart: ref.events.startCapture,\r\n    onmousedown: ref.events.startCapture\r\n  };\r\n}\r\n\r\n/**\r\n * @callback ObserverEventMove\r\n * @param {\"start\"|\"end\"|\"move\"} type - states associated with event capture\r\n * @param {Array.<{x:number,y:number,t:number}>} range - useful range of the associated movement\r\n * @return {{ref:{}}}\r\n */\r\n","import {\n  h,\n  useRef,\n  useHost,\n  useState,\n  useEffect,\n  customElement\n} from \"atomico\";\nimport { useLazy } from \"../../hooks/use-lazy/use-lazy\";\nimport { useEventMove } from \"../../hooks/use-event-move/use-event-move\";\nimport style from \"./a-showcase.css\";\n\nexport const isUrl = file => /^(http(s){0,1}:){0,1}\\/\\//.test(file);\n\nconst AShowcase = ({ src, width, height }) => {\n  const refSandbox = useRef();\n  const refPreview = useRef();\n  const refSelect = useRef();\n  const refHost = useHost();\n\n  let [select, setSelect] = useState();\n\n  let currentZone;\n\n  const propsMove = useEventMove((type, range) => {\n    if (type == \"start\") {\n      currentZone = refHost.current.getBoundingClientRect();\n    }\n    if (type == \"move\") {\n      const last = range[range.length - 1];\n      const move = last.x - currentZone.x;\n      const minWidth = refSelect.current\n        ? refSelect.current.clientWidth + 22\n        : 50;\n      const width =\n        ((move < minWidth ? minWidth : move) / currentZone.width) * 100;\n\n      refPreview.current.style.width =\n        (width > 100 ? 100 : width < 0 ? 0 : width) + \"%\";\n    }\n  });\n\n  const [lazyState, lazyResult] = useLazy(\n    () => import((isUrl(src) ? \"\" : \"./\") + src).then(md => ({ default: md })),\n    true\n  );\n\n  const lazyStateIsDone = lazyState == \"done\";\n\n  const cases = lazyStateIsDone ? [].concat(lazyResult.default) : [];\n\n  select = select || (lazyStateIsDone && cases[0].label);\n\n  useEffect(() => {\n    const { render, rendered } =\n      cases.find(({ label }) => label == select) || {};\n\n    render && lazyResult.render(render(), refSandbox.current);\n    rendered && rendered(refSandbox.current);\n  }, [lazyStateIsDone, select]);\n\n  return (\n    <host shadowDom style={{ width, height }}>\n      <style>{style}</style>\n\n      {lazyStateIsDone && (\n        <select\n          ref={refSelect}\n          class=\"showcase -select\"\n          onchange={({ target: { value } }) => setSelect(value)}\n        >\n          {cases.map(({ label }) => (\n            <option value={label}>{label}</option>\n          ))}\n        </select>\n      )}\n\n      <section class=\"showcase -preview\" ref={refPreview}>\n        <div class=\"showcase -sandbox\" ref={refSandbox}></div>\n        <button class=\"showcase -resize\" {...propsMove}></button>\n      </section>\n    </host>\n  );\n};\n\nAShowcase.props = {\n  width: {\n    type: String\n  },\n  height: {\n    type: String\n  },\n  src: {\n    type: String\n  },\n  centered: {\n    type: Boolean,\n    reflect: true\n  }\n};\n\nexport default customElement(\"a-showcase\", AShowcase);\n"],"names":["globalHandlerCancel","globalHandlerCapture","addEventListener","type","handler","window","removeEventListener","useEventMove","callback","ref","useState","dispath","args","startCapture","event","capture","forEach","endCapture","currentCapture","ignoreEmit","x","y","test","touch","touches","clientX","clientY","push","t","timeStamp","slide","events","ontouchstart","onmousedown","isUrl","file","AShowcase","src","width","height","refSandbox","useRef","refPreview","refSelect","refHost","useHost","select","setSelect","currentZone","propsMove","range","current","getBoundingClientRect","last","length","move","minWidth","clientWidth","style","lazyState","lazyResult","useLazy","then","md","default","lazyStateIsDone","cases","concat","label","useEffect","render","rendered","find","h","target","value","map","props","String","centered","Boolean","reflect","customElement"],"mappings":"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"}