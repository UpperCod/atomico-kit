{"version":3,"file":"a-showcase.js","sources":["../src/hooks/use-event-move/use-event-move.js","../src/components/a-showcase/a-showcase.js","../src/utils.js"],"sourcesContent":["import { useState } from \"atomico\";\r\n\r\nlet globalHandlerCancel = [\r\n  \"touchend\",\r\n  \"mouseup\",\r\n  \"mouseleave\",\r\n  \"touchleave\",\r\n  \"click\"\r\n];\r\nlet globalHandlerCapture = [\"mousemove\", \"touchmove\"];\r\n\r\nfunction addEventListener(type, handler) {\r\n  window.addEventListener(type, handler);\r\n}\r\n\r\nfunction removeEventListener(type, handler) {\r\n  window.removeEventListener(type, handler);\r\n}\r\n\r\nexport function getSwipe(range, duration = 500, space = 100) {\r\n  let length = range.length;\r\n  let first = range[0];\r\n  let last = range[length - 1];\r\n  let [x, y] = range.reduce(([x, y], step) => [(x += step.x), (y += step.y)], [\r\n    0,\r\n    0\r\n  ]);\r\n  let ms = last.t - first.t;\r\n  if (ms < duration) {\r\n    let xD = first.x - last.x;\r\n\r\n    let dir = xD > 0 ? \"toRight\" : \"toLeft\";\r\n\r\n    if (Math.abs(xD) > 60) {\r\n      let yM = y / length;\r\n\r\n      let yMMax = yM + space / 2;\r\n      let yMMin = yM - space / 2;\r\n\r\n      let validZoneY = [first, last].every(({ y }) => y <= yMMax && y >= yMMin);\r\n      if (validZoneY) {\r\n        return dir;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {ObserverEventMove} callback\r\n */\r\nexport function useEventMove(callback) {\r\n  let [ref] = useState(() => {\r\n    function dispath(...args) {\r\n      return ref.callback(...args);\r\n    }\r\n    function startCapture(event) {\r\n      ref.capture = [];\r\n      globalHandlerCancel.forEach(type => addEventListener(type, endCapture));\r\n      globalHandlerCapture.forEach(type => addEventListener(type, capture));\r\n      capture(event, true);\r\n      dispath(\"start\", ref.capture);\r\n    }\r\n    function endCapture(event) {\r\n      if (!ref.capture) return;\r\n      capture(event, false);\r\n      let { capture: currentCapture } = ref;\r\n      ref.capture = false;\r\n      globalHandlerCancel.forEach(type =>\r\n        removeEventListener(type, endCapture)\r\n      );\r\n      globalHandlerCapture.forEach(type => removeEventListener(type, capture));\r\n      dispath(\"end\", currentCapture);\r\n    }\r\n    function capture(event, ignoreEmit) {\r\n      if (!ref.capture) return;\r\n      let x;\r\n      let y;\r\n\r\n      if (/touch/.test(event.type)) {\r\n        let touch = event.touches[0];\r\n        if (!touch) return;\r\n        x = touch.clientX;\r\n        y = touch.clientY;\r\n      } else {\r\n        x = event.clientX;\r\n        y = event.clientY;\r\n      }\r\n      ref.capture.push({ x, y, t: event.timeStamp });\r\n\r\n      if (!ignoreEmit) dispath(\"move\", ref.capture);\r\n    }\r\n\r\n    return {\r\n      slide: -1,\r\n      events: {\r\n        startCapture\r\n      }\r\n    };\r\n  });\r\n\r\n  ref.callback = callback;\r\n\r\n  return {\r\n    ref,\r\n    ontouchstart: ref.events.startCapture,\r\n    onmousedown: ref.events.startCapture\r\n  };\r\n}\r\n\r\n/**\r\n * @callback ObserverEventMove\r\n * @param {\"start\"|\"end\"|\"move\"} type - states associated with event capture\r\n * @param {Array.<{x:number,y:number,t:number}>} range - useful range of the associated movement\r\n * @return {{ref:{}}}\r\n */\r\n","import {\n  h,\n  useRef,\n  useHost,\n  useState,\n  useEffect,\n  customElement\n} from \"atomico\";\nimport { isUrl } from \"../../utils\";\nimport { useLazy } from \"../../hooks/use-lazy/use-lazy\";\nimport { useEventMove } from \"../../hooks/use-event-move/use-event-move\";\nimport style from \"./a-showcase.css\";\n\nconst AShowcase = ({ src, width, height }) => {\n  const refSandbox = useRef();\n  const refPreview = useRef();\n  const refSelect = useRef();\n  const refHost = useHost();\n\n  let [select, setSelect] = useState();\n\n  let currentZone;\n\n  const propsMove = useEventMove((type, range) => {\n    if (type == \"start\") {\n      currentZone = refHost.current.getBoundingClientRect();\n    }\n    if (type == \"move\") {\n      const last = range[range.length - 1];\n      const move = last.x - currentZone.x;\n      const minWidth = refSelect.current\n        ? refSelect.current.clientWidth + 22\n        : 50;\n      const width =\n        ((move < minWidth ? minWidth : move) / currentZone.width) * 100;\n\n      refPreview.current.style.width =\n        (width > 100 ? 100 : width < 0 ? 0 : width) + \"%\";\n    }\n  });\n\n  const [lazyState, lazyResult] = useLazy(\n    () => import((isUrl(src) ? \"\" : \"./\") + src).then(md => ({ default: md })),\n    true\n  );\n\n  const lazyStateIsDone = lazyState == \"done\";\n\n  const cases = lazyStateIsDone ? [].concat(lazyResult.default) : [];\n\n  select = select || (lazyStateIsDone && cases[0].label);\n\n  useEffect(() => {\n    const { render, rendered } =\n      cases.find(({ label }) => label == select) || {};\n\n    render && lazyResult.render(render(), refSandbox.current);\n    rendered && rendered(refSandbox.current);\n  }, [lazyStateIsDone, select]);\n\n  return (\n    <host shadowDom style={{ width, height }}>\n      <style>{style}</style>\n\n      {lazyStateIsDone && (\n        <select\n          ref={refSelect}\n          class=\"showcase -select\"\n          onchange={({ target: { value } }) => setSelect(value)}\n        >\n          {cases.map(({ label }) => (\n            <option value={label}>{label}</option>\n          ))}\n        </select>\n      )}\n\n      <section class=\"showcase -preview\" ref={refPreview}>\n        <div class=\"showcase -sandbox\" ref={refSandbox}></div>\n        <button class=\"showcase -resize\" {...propsMove}></button>\n      </section>\n    </host>\n  );\n};\n\nAShowcase.props = {\n  width: {\n    type: String\n  },\n  height: {\n    type: String\n  },\n  src: {\n    type: String\n  },\n  centered: {\n    type: Boolean,\n    reflect: true\n  }\n};\n\nexport default customElement(\"a-showcase\", AShowcase);\n","export const isUrl = file => /^(http(s){0,1}:){0,1}\\/\\//.test(file);\r\n"],"names":["globalHandlerCancel","globalHandlerCapture","addEventListener","type","handler","window","removeEventListener","AShowcase","src","width","height","refSandbox","useRef","refPreview","refSelect","refHost","useHost","currentZone","select","setSelect","useState","propsMove","callback","ref","dispath","args","endCapture","event","capture","currentCapture","forEach","ignoreEmit","x","y","test","touch","touches","clientX","clientY","push","t","timeStamp","slide","events","startCapture","ontouchstart","onmousedown","useEventMove","range","current","getBoundingClientRect","move","length","minWidth","clientWidth","style","lazyState","lazyResult","useLazy","import","file","then","md","default","lazyStateIsDone","cases","concat","label","useEffect","render","rendered","find","h","shadowDom","class","onchange","target","value","map","props","String","centered","Boolean","reflect","customElement"],"mappings":"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"}