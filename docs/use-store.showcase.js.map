{"version":3,"file":"use-store.showcase.js","sources":["../src/hooks/use-store/use-store.js","../src/hooks/use-store/use-store.showcase.js"],"sourcesContent":["import { useState, useEffect } from \"atomico\";\n\nlet eventTypeUpdate = \"update\";\n\n/**\n * If you use a function you can apply a property\n * calculation strategy using getter\n * @property {Function|Object} initialState - defines the initial state.\n * @example\n * let createInitialState = (store)=>({\n *  fullName(){\n *       return this.fistName + \" \" + this.lastName;\n *  }\n * })\n * @returns {Store}\n */\nexport function createStore(initialState) {\n  let events = {};\n  let chunkUpdate;\n\n  let state = new Proxy(\n    typeof initialState == \"function\"\n      ? initialState(store)\n      : { ...initialState },\n    {\n      set(target, prop, value) {\n        if (target[prop] != value) {\n          // Group updates into a single event\n          if (!chunkUpdate) {\n            chunkUpdate = [\"*\"];\n            queueMicrotask(() => {\n              chunkUpdate.forEach(\n                (prop) =>\n                  events[prop] &&\n                  events[prop].forEach((callback) =>\n                    callback(state, chunkUpdate)\n                  )\n              );\n\n              chunkUpdate = false;\n            });\n          }\n\n          if (chunkUpdate) chunkUpdate.push(prop);\n\n          target[prop] = value;\n        }\n        return true;\n      },\n    }\n  );\n\n  let onUpdate = (prop, callback) => {\n    events[prop] = events[prop] || [];\n\n    if (!events[prop].includes(callback)) events[prop].push(callback);\n\n    return () => events[prop].splice(events[prop].indexOf(callback) >>> 0, 1);\n  };\n\n  let update = (props) => Object.assign(state, props);\n\n  return { onUpdate, update, state };\n}\n\nexport function useStore(store, prop = \"*\") {\n  let [, setState] = useState(0);\n\n  useEffect(() => store.onUpdate(prop, () => setState((state) => state + 1)), [\n    store,\n  ]);\n\n  return store.state;\n}\n\n/**\n * @typedef Store\n * @property {Object} state - Concurrent state\n * @property {(prop:string,callback:Function)=>void} onUpdate - listen for changes associated with a state property\n * @property {(props:Object)=>Object} update - update one or more properties using an object\n */\n","import { h, customElement, Any } from \"atomico\";\r\nimport { createStore, useStore } from \"./use-store\";\r\nexport { render } from \"atomico\";\r\n\r\nlet store = createStore({ count: 0 });\r\n\r\nconst UseStore1 = ({ store }) => {\r\n  let state = useStore(store);\r\n  return (\r\n    <host>\r\n      Component A <button onclick={() => (state.count += 1)}>Increment</button>\r\n      <strong> State : {JSON.stringify(state)}</strong>\r\n    </host>\r\n  );\r\n};\r\n\r\nconst UseStore2 = ({ store }) => {\r\n  let state = useStore(store);\r\n  return (\r\n    <host>\r\n      Component B <button onclick={() => (state.count -= 1)}>Decrement</button>\r\n      <strong> State : {JSON.stringify(state)}</strong>\r\n    </host>\r\n  );\r\n};\r\n\r\nUseStore1.props = UseStore2.props = {\r\n  store: Any,\r\n};\r\n\r\ncustomElement(\"use-store-1\", UseStore1);\r\ncustomElement(\"use-store-2\", UseStore2);\r\n\r\nexport default [\r\n  {\r\n    label: \"useStore\",\r\n    render() {\r\n      store.onUpdate(\"*\", (store) => {\r\n        console.log(store);\r\n      });\r\n      return (\r\n        <div>\r\n          <p>\r\n            The components are synchronized to the store given by the parent\r\n          </p>\r\n          <use-store-1 store={store}></use-store-1>\r\n          <br />\r\n          <use-store-2 store={store}></use-store-2>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n"],"names":["useStore","store","prop","setState","useState","useEffect","onUpdate","state","initialState","chunkUpdate","events","Proxy","set","target","value","queueMicrotask","forEach","callback","push","includes","splice","indexOf","update","props","Object","assign","createStore","count","UseStore1","h","onclick","JSON","stringify","UseStore2","Any","customElement","label","render","console","log"],"mappings":"mHAiEO,SAASA,EAASC,EAAOC,EAAO,UAC9BC,GAAYC,EAAS,UAE5BC,EAAU,IAAMJ,EAAMK,SAASJ,EAAM,IAAMC,EAAUI,GAAUA,EAAQ,IAAK,CAC1EN,IAGKA,EAAMM,MCpEf,IAAIN,EDYG,SAAqBO,OAEtBC,EADAC,EAAS,GAGTH,EAAQ,IAAII,MACS,mBAAhBH,EACHA,EAAaP,OACb,IAAKO,GACT,CACEI,IAAG,CAACC,EAAQX,EAAMY,KACZD,EAAOX,IAASY,IAEbL,IACHA,EAAc,CAAC,KACfM,eAAe,KACbN,EAAYO,QACTd,GACCQ,EAAOR,IACPQ,EAAOR,GAAMc,QAASC,GACpBA,EAASV,EAAOE,KAItBA,GAAc,KAIdA,GAAaA,EAAYS,KAAKhB,GAElCW,EAAOX,GAAQY,IAEV,WAeN,CAAER,SAVM,CAACJ,EAAMe,KACpBP,EAAOR,GAAQQ,EAAOR,IAAS,GAE1BQ,EAAOR,GAAMiB,SAASF,IAAWP,EAAOR,GAAMgB,KAAKD,GAEjD,IAAMP,EAAOR,GAAMkB,OAAOV,EAAOR,GAAMmB,QAAQJ,KAAc,EAAG,IAKtDK,OAFLC,GAAUC,OAAOC,OAAOlB,EAAOgB,GAElBhB,MAAAA,GC1DjBmB,CAAY,CAAEC,MAAO,IAEjC,MAAMC,EAAY,EAAG3B,MAAAA,UACfM,EAAQP,EAASC,UAEnB4B,6BACcA,YAAQC,QAAS,IAAOvB,EAAMoB,OAAS,gBACnDE,4BAAkBE,KAAKC,UAAUzB,MAKjC0B,EAAY,EAAGhC,MAAAA,UACfM,EAAQP,EAASC,UAEnB4B,6BACcA,YAAQC,QAAS,IAAOvB,EAAMoB,OAAS,gBACnDE,4BAAkBE,KAAKC,UAAUzB,MAKvCqB,EAAUL,MAAQU,EAAUV,MAAQ,CAClCtB,MAAOiC,GAGTC,EAAc,cAAeP,GAC7BO,EAAc,cAAeF,GAE7B,MAAe,CACb,CACEG,MAAO,WACPC,OAAM,KACJpC,EAAMK,SAAS,IAAML,IACnBqC,QAAQC,IAAItC,KAGZ4B,aACEA,+EAGAA,iBAAa5B,MAAOA,IACpB4B,aACAA,iBAAa5B,MAAOA"}