{"version":3,"file":"ffece87a.js","sources":["../../src/hooks/use-lazy/use-lazy.js"],"sourcesContent":["import { useState, useEffect } from \"atomico\";\r\n\r\nexport const USE_LAZY_UNIMPORT = \"unimport\";\r\nexport const USE_LAZY_LOADING = \"loading\";\r\nexport const USE_LAZY_ERROR = \"error\";\r\nexport const USE_LAZY_DONE = \"done\";\r\n\r\n/**\r\n *\r\n *\r\n * @param {()=>Promise} callbackImport -\r\n * @param {boolean} initImport -\r\n *\r\n * @example\r\n * useLazy(()=>import(\"./any.js\"),initRequest);\r\n */\r\nexport function useLazy(callbackImport, initImport, reload = []) {\r\n  const [state, setState] = useState([USE_LAZY_UNIMPORT]);\r\n  useEffect(() => {\r\n    if (!initImport || !callbackImport) return;\r\n    let cancel;\r\n    let done;\r\n\r\n    setTimeout(\r\n      () =>\r\n        !done &&\r\n        !cancel &&\r\n        setState(state =>\r\n          state[0] == USE_LAZY_LOADING ? state : [USE_LAZY_LOADING]\r\n        ),\r\n      100\r\n    );\r\n\r\n    callbackImport()\r\n      .then(md =>\r\n        setState(state => {\r\n          done = true;\r\n          return cancel\r\n            ? state\r\n            : [USE_LAZY_DONE, md && \"default\" in md ? md.default : md];\r\n        })\r\n      )\r\n      .catch(error =>\r\n        setState(state => (cancel ? state : [USE_LAZY_ERROR, error]))\r\n      );\r\n\r\n    return () => (cancel = true);\r\n  }, [initImport, ...reload]);\r\n\r\n  return state;\r\n}\r\n"],"names":["useLazy","callbackImport","initImport","reload","state","setState","useState","useEffect","cancel","done","setTimeout","then","md","default","catch","error"],"mappings":"oCAgBO,SAASA,EAAQC,EAAgBC,EAAYC,EAAS,UACpDC,EAAOC,GAAYC,EAAS,CAfJ,oBAgB/BC,EAAU,SACHL,IAAeD,EAAgB,WAChCO,EACAC,SAEJC,WACE,KACGD,IACAD,GACDH,EAASD,GAxBe,WAyBtBA,EAAM,GAAyBA,EAAQ,CAzBjB,YA2B1B,KAGFH,IACGU,KAAKC,GACJP,EAASD,IACPK,GAAO,EACAD,EACHJ,EACA,CAlCe,OAkCCQ,GAAM,YAAaA,EAAKA,EAAGC,QAAUD,MAG5DE,MAAMC,GACLV,EAASD,GAAUI,EAASJ,EAAQ,CAvCd,QAuC+BW,KAGlD,IAAOP,GAAS,GACtB,CAACN,KAAeC,IAEZC"}